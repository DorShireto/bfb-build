#!/bin/bash -e

cd ${0%*/*}

if [ ! -e Dockerfile ]; then
	echo "ERROR: Dockerfile is missing."
	exit 1
fi

if ! (which wget > /dev/null 2>&1); then
	echo "wget is required to build BFB"
	exit 1
fi

if ! (which docker > /dev/null 2>&1); then
	echo "docker is required to build BFB"
	exit 1
fi

DISTRO="ubuntu"
DISTRO_VERSION="20.04"
DISTRO_BASE_URL="http://cloud-images.ubuntu.com/releases/focal/release/${DISTRO}-${DISTRO_VERSION}-server-cloudimg-arm64-root.tar.xz"
VERSION="3.8.5"
IMAGE_TYPE=${IMAGE_TYPE:-"prod"}

WDIR=/tmp/${DISTRO}${DISTRO_VERSION}.$$

mkdir -p $WDIR
wget -P $WDIR https://linux.mellanox.com/public/repo/bluefield/${VERSION}/bootimages/${IMAGE_TYPE}/update.cap
wget -P $WDIR https://linux.mellanox.com/public/repo/bluefield/${VERSION}/bootimages/${IMAGE_TYPE}/mlxbf-bootimages_3.8.5-12027_arm64.deb

cp	Dockerfile \
	vmlinuz \
	create_bfb \
	install.sh \
	../../common/tools/qemu-aarch64-static \
	$WDIR

cd $WDIR

wget $DISTRO_BASE_URL

docker build -t bfb_runtime_${DISTRO}${DISTRO_VERSION} -f Dockerfile .
docker run -t --rm --privileged -e container=docker \
	-v $PWD:/workspace \
	--name BlueField_OS_${DISTRO}_${DISTRO_VERSION} \
	--mount type=bind,source=/dev,target=/dev \
	--mount type=bind,source=/sys,target=/sys \
	--mount type=bind,source=/proc,target=/proc \
	bfb_runtime_${DISTRO}${DISTRO_VERSION}

readlink -f *aarch64.bfb
